# vim: syntax=gitconfig

# SPDX-License-Identifier: CC0-1.0

[alias]
	# direct aliases
	go   = switch
	pick = cherry-pick
	stat = status
	wip  = wip-dump

	# === shortened commands === #

	# staging
	addall = add --all --verbose
	adduv  = add --update --verbose
	ai     = add --interactive
	a      = add --verbose
	patch  = add --patch

	# committing
	amend = commit --amend
	fixup = commit --fixup

	# diffing
	changes = diff --staged
	rawdiff = !git -c diff.noprefix=false --no-pager diff --patch-with-raw -z --no-color --full-index --binary
	xcopy-changes = xcopy-diff --staged

	# other
	branchall = branch --all --verbose --verbose # yes, 2x --verbose is correct
	ff = merge --ff-only
	hist = log --patch --follow --
	init-commit = commit --message='Initial commit'

	# ========================== #

	# === "new" commands === #

	# TODO: these aliases should be in their own executable file

	list-all = !{ git --no-pager ls-tree --full-tree -r --name-only HEAD && git -P diff --staged --name-only";" } # TODO: ever needed?
	null-list-all = !{ git --no-pager ls-tree --full-tree -r --name-only -z HEAD && git -P diff --staged --name-only -z";" } # TODO: only needed for `git-sed`, inline it into it's executable and remove it?
	sed = !git null-list-all | xargs -0 sed -i
	reword = !git reset && git commit --amend # TODO: in the future add support for more than just rewording HEAD
	backup = !git stash push --include-untracked --message 'Backup' && git stash apply

	# ====================== #

	set-editor-codium-workspace    = config core.editor 'codium --wait --new-window .'
	set-editor-codium-no-workspace = config core.editor 'codium --wait --new-window'
	set-editor-gedit               = !printf \"\\033[31mgedit is dead. Long live gnome-text-editor\\033[0m\\n\"
	set-editor-gnome-text-editor   = !printf \"\\033[31mNot supported yet.\\033[0m\\n\"
	set-editor-vim                 = config core.editor 'vim -n'
