# vim: syntax=gitconfig
# code: language=properties

# SPDX-License-Identifier: CC0-1.0

# TODO: switch to `$XDG_CONFIG_HOME/git/config` in the future

[user]
	name = Michael Federczuk
	email = federczuk.michael@protonmail.com
	signingKey = B1299309A8D8D90B

[gpg]
	# git uses by default the `gpg` binary, which on some older systems may still be GnuPG v1.x, so let's explictly tell
	# git to use v2.x instead
	program = gpg2

[core]
	editor = vim -n
	excludesfile = ~/.global-gitignore # TODO: switch to `$XDG_CONFIG_HOME/git/ignore` in the future and remove this var

	# -+X -> enable termcap initialization/deinitialization (disabled by default for whatever reason)
	pager = less --quit-if-one-screen --ignore-case --quit-on-intr --LONG-PROMPT --RAW-CONTROL-CHARS --chop-long-lines -+X --file-size --

[pretty]
	custom-oneline            = %C(auto)%h%d %s %C(reset)%C(dim yellow)(%ar)
	custom-oneline-name       = %C(auto)%h%d %s %C(reset)%C(dim default)(%C(no-dim magenta)%aN%C(dim default), %C(yellow)%ar%C(default))
	custom-oneline-name-email = %C(auto)%h%d %s %C(reset)%C(dim default)(%C(no-dim magenta)%aN%C(dim default) <%C(no-dim magenta)%C(bold)%aE%C(no-bold)%C(dim default)>, %C(yellow)%ar%C(default))

	# the leading string "format:" for these formats is important. without it, we get some extra trailing newlines

	custom-medium = format:%C(auto,yellow)commit%C(auto) %H %C(auto,dim yellow){%C(auto)%h%C(auto,dim yellow)}%C(auto)%d%n\
%C(auto,dim)tree%C(auto) %C(auto,dim)%t%C(auto)%n\
Author: %aN <%aE>%n\
Date:   %ad %C(auto,dim)(%ar)%C(auto)%n\
%n\
%w(80,4,4)%B\
%+N

	custom-fuller = format:%C(auto,yellow)commit%C(auto) %H %C(auto,dim yellow){%C(auto)%h%C(auto,dim yellow)}%C(auto)%d%n\
%n\
%C(auto,dim)tree%C(auto) %C(auto,dim)%T%C(auto) %C(auto,dim black){%C(auto,dim)%C(reset)%C(auto,dim)%t%C(auto,dim black)}%C(auto)%n\
%n\
Author:      %C(auto,bold)%aN%C(auto) <%C(auto,bold)%aE%C(auto)>%n\
Author Date: %C(auto,bold)%ad%C(auto) %C(auto,dim)(%ar)%C(auto)%n\
%n\
Committer:   %C(auto,bold)%cN%C(auto) <%C(auto,bold)%aE%C(auto)>%n\
Commit Date: %C(auto,bold)%cd%C(auto) %C(auto,dim)(%cr)%C(auto)%n\
%n\
%w(120,8,8)%C(auto,italic)%B\
%+N

[format]
	pretty = custom-fuller

[init]
	defaultBranch = master

[commit]
	gpgSign = true

[diff]
	noprefix = true

[pull]
	ff = only

[merge]
	ff = false
	tool = vimdiff

[rebase]
	autoStash = true
	autoSquash = true

[stash]
	showIncludeUntracked = true
	showPatch = true
	showStat = true

[grep]
	lineNumber = true
	patternType = extended

[mergetool]
	keepBackup = false

[alias]
	# direct aliases
	go   = switch
	pick = cherry-pick
	stat = status
	wip  = wip-dump

	# === shortened commands === #

	# staging
	addall = add --all --verbose
	adduv  = add --update --verbose
	ai     = add --interactive
	a      = add --verbose
	patch  = add --patch

	# committing
	amend = commit --amend
	fixup = commit --fixup

	# diffing
	changes = diff --staged
	rawdiff = !git --no-pager -c diff.noprefix=false diff --patch --raw -z --no-color
	xcopy-changes = xcopy-diff --staged

	# other
	branchall = branch --all --verbose --verbose # yes, 2x --verbose is correct
	ff = merge --ff-only
	hist = log --patch --follow --
	init-commit = commit --message='Initial commit'

	# ========================== #

	# === "new" commands === #

	# TODO: these aliases should be in their own executable file

	list-all = !{ git --no-pager ls-tree --full-tree -r --name-only HEAD && git -P diff --staged --name-only";" } # TODO: ever needed?
	null-list-all = !{ git --no-pager ls-tree --full-tree -r --name-only -z HEAD && git -P diff --staged --name-only -z";" } # TODO: only needed for `git-sed`, inline it into it's executable and remove it?
	sed = !git null-list-all | xargs -0 sed -i
	purge = !git reset --hard && git clean -d --force
	reword = !git reset && git commit --amend # TODO: in the future add support for more than just rewording HEAD
	backup = !git stash push --include-untracked --message 'Backup' && git stash apply

	# ====================== #

	set-editor-codium-workspace  = config core.editor 'codium --wait .'
	set-editor-codium-new-window = config core.editor 'codium --wait --new-window'
	set-editor-gedit             = !printf \"\\033[31mgedit is dead. Long live gnome-text-editor\\033[0m\\n\"
	set-editor-gnome-text-editor = !printf \"\\033[31mNot supported yet.\\033[0m\\n\"
	set-editor-vim               = config core.editor 'vim -n'

[include]
	path = ~/.config/git/secret.gitconfig
